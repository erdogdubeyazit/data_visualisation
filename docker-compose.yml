version: '3.8'

services:
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - JAVA_OPTS=-XX:+UseSerialGC
      - NEO4J_AUTH=neo4j/yourpassword
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./test-data.cypher:/docker-entrypoint-initdb.d/test-data.cypher
    command: >
      bash -c "neo4j start && sleep 20 &&
               cypher-shell -u neo4j -p yourpassword -f /docker-entrypoint-initdb.d/test-data.cypher &&
               tail -f /dev/null"
    networks:
      - dev-network
    healthcheck:
      test: [ "CMD", "cypher-shell", "-u", "neo4j", "-p", "yourpassword", "RETURN 1" ]
      interval: 20s
      retries: 10
      start_period: 40s
      timeout: 30s

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env.dev
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - dev-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env.dev
    depends_on:
      - backend
    networks:
      - dev-network

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  dev-network:
    driver: bridge
